# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- pre-build
- build
- test
- deploy
- review
- dast
- staging
- canary
- production
- incremental rollout 10%
- incremental rollout 25%
- incremental rollout 50%
- incremental rollout 100%
- performance
- cleanup
workflow:
  rules:
  - if: "$CI_MERGE_REQUEST_IID"
    when: never
  - if: $BUILDPACK_URL || $AUTO_DEVOPS_EXPLICITLY_ENABLED == "1"
  - exists:
    - Dockerfile
  - exists:
    - project.clj
  - exists:
    - go.mod
    - Gopkg.mod
    - Godeps/Godeps.json
    - vendor/vendor.json
    - glide.yaml
    - src/**/*.go
  - exists:
    - gradlew
    - build.gradle
    - settings.gradle
  - exists:
    - pom.xml
    - pom.atom
    - pom.clj
    - pom.groovy
    - pom.rb
    - pom.scala
    - pom.yaml
    - pom.yml
  - exists:
    - ".buildpacks"
  - exists:
    - package.json
  - exists:
    - composer.json
    - index.php
  - exists:
    - "**/conf/application.conf"
  - exists:
    - requirements.txt
    - setup.py
    - Pipfile
  - exists:
    - Gemfile
  - exists:
    - "*.sbt"
    - project/*.scala
    - ".sbt/*.scala"
    - project/build.properties
  - exists:
    - ".static"
default:
  image: alpine:latest
  tags:
  - gitlab-org
variables:
  POSTGRES_USER: user
  POSTGRES_PASSWORD: testing-password
  POSTGRES_ENABLED: 'true'
  POSTGRES_DB: "$CI_ENVIRONMENT_SLUG"
  POSTGRES_VERSION: 9.6.2
  DOCKER_DRIVER: overlay2
  ROLLOUT_RESOURCE_TYPE: deployment
  DOCKER_TLS_CERTDIR: ''
  DANGER_GITLAB_API_TOKEN: "$GITLAB_TOKEN"
include:
- template: Jobs/Build.gitlab-ci.yml
- template: Jobs/Test.gitlab-ci.yml
- template: Jobs/Code-Quality.gitlab-ci.yml
- template: Jobs/Deploy.gitlab-ci.yml
- template: Jobs/DAST-Default-Branch-Deploy.gitlab-ci.yml
- template: Jobs/Browser-Performance-Testing.gitlab-ci.yml
- template: Security/DAST.gitlab-ci.yml
- template: Security/Container-Scanning.gitlab-ci.yml
- template: Security/Dependency-Scanning.gitlab-ci.yml
- template: Security/License-Scanning.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml
- project: gitlab-org/frontend/frontend-build-images
  file: "/semantic-release/.gitlab-ci-template.yml"
- project: gitlab-org/frontend/untamper-my-lockfile
  file: ".gitlab-ci-template.yml"
- template: Auto-DevOps.gitlab-ci.yml
danger-review:
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:danger
  stage: pre-build
  dependencies: []
  rules:
  - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    when: never
  - if: "$DANGER_GITLAB_API_TOKEN"
  script:
  - danger --fail-on-errors=true
build:
  tags:
  - gitlab-org-docker
code_quality:
  tags:
  - gitlab-org-docker
dependency_scanning:
  tags:
  - gitlab-org-docker
sast:
  tags:
  - gitlab-org-docker
  stage: test
semantic-release:
  extends: ".semantic-release"
  allow_failure: true
  script:
  - semantic-release --debug
  only:
    refs:
    - main
